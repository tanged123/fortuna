{"ast":null,"code":"var _jsxFileName = \"/home/tanged/repo/Fortuna/src/components/SankeyChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { formatCurrency } from '../utils/csvParser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SankeyChart = ({\n  data\n}) => {\n  _s();\n  const [hoveredNode, setHoveredNode] = useState(null);\n  const [hoveredLink, setHoveredLink] = useState(null);\n\n  // Generate Sankey data from financial data\n  const generateSankeyData = useMemo(() => {\n    const nodes = [];\n    const links = [];\n\n    // Define colors for different categories\n    const colors = {\n      income: '#10B981',\n      // Green\n      savings: '#3B82F6',\n      // Blue\n      rent: '#EF4444',\n      // Red\n      utilities: '#F59E0B',\n      // Orange\n      groceries: '#8B5CF6',\n      // Purple\n      restaurants: '#EC4899',\n      // Pink\n      gas: '#6B7280',\n      // Gray\n      medical: '#F97316',\n      // Orange\n      gym: '#84CC16',\n      // Lime\n      travel: '#06B6D4',\n      // Cyan\n      shopping: '#F43F5E',\n      // Rose\n      entertainment: '#A855F7',\n      // Violet\n      miscellaneous: '#64748B' // Slate\n    };\n\n    // Add income node\n    nodes.push({\n      id: 'income',\n      name: 'Monthly Income',\n      value: data.monthlyNetIncome,\n      color: colors.income\n    });\n\n    // Add expense nodes and links\n    data.expenses.forEach((expense, index) => {\n      const nodeId = `expense-${index}`;\n      const categoryKey = expense.category.toLowerCase().replace(/[^a-z]/g, '');\n      nodes.push({\n        id: nodeId,\n        name: expense.category,\n        value: expense.amount,\n        color: colors[categoryKey] || colors.miscellaneous\n      });\n      links.push({\n        source: 'income',\n        target: nodeId,\n        value: expense.amount,\n        color: colors[categoryKey] || colors.miscellaneous\n      });\n    });\n\n    // Add savings node and link\n    if (data.savings > 0) {\n      nodes.push({\n        id: 'savings',\n        name: 'Savings',\n        value: data.savings,\n        color: colors.savings\n      });\n      links.push({\n        source: 'income',\n        target: 'savings',\n        value: data.savings,\n        color: colors.savings\n      });\n    }\n    return {\n      nodes,\n      links\n    };\n  }, [data]);\n  const sankeyData = generateSankeyData();\n\n  // Calculate layout dimensions\n  const containerWidth = 900;\n  const containerHeight = 500;\n  const nodeWidth = 25;\n  const nodeSpacing = 15;\n\n  // Calculate node positions\n  const calculateLayout = () => {\n    const leftNodes = sankeyData.nodes.filter(node => node.id === 'income');\n    const rightNodes = sankeyData.nodes.filter(node => node.id !== 'income');\n\n    // Position income node on the left\n    leftNodes.forEach((node, index) => {\n      node.x = 50;\n      node.y = containerHeight / 2 - node.value / 2;\n      node.width = nodeWidth;\n      node.height = Math.max(20, node.value / 10);\n    });\n\n    // Position expense/savings nodes on the right\n    let currentY = 50;\n    rightNodes.forEach(node => {\n      node.x = containerWidth - 150;\n      node.y = currentY;\n      node.width = nodeWidth;\n      node.height = Math.max(20, node.value / 10);\n      currentY += node.height + nodeSpacing;\n    });\n  };\n  calculateLayout();\n\n  // Generate SVG path for links\n  const generateLinkPath = link => {\n    const sourceNode = sankeyData.nodes.find(n => n.id === link.source);\n    const targetNode = sankeyData.nodes.find(n => n.id === link.target);\n    if (!sourceNode || !targetNode) return '';\n    const sourceX = (sourceNode.x || 0) + (sourceNode.width || 0);\n    const sourceY = (sourceNode.y || 0) + (sourceNode.height || 0) / 2;\n    const targetX = targetNode.x || 0;\n    const targetY = (targetNode.y || 0) + (targetNode.height || 0) / 2;\n    const controlPoint1X = sourceX + (targetX - sourceX) * 0.3;\n    const controlPoint2X = sourceX + (targetX - sourceX) * 0.7;\n    return `M ${sourceX} ${sourceY} C ${controlPoint1X} ${sourceY}, ${controlPoint2X} ${targetY}, ${targetX} ${targetY}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-sm border border-gray-200 p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-gray-900 mb-2\",\n        children: \"Money Flow Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600\",\n        children: \"See how your monthly income flows into expenses and savings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: containerWidth,\n        height: containerHeight,\n        className: \"mx-auto\",\n        style: {\n          minWidth: containerWidth\n        },\n        children: [sankeyData.links.map((link, index) => /*#__PURE__*/_jsxDEV(\"path\", {\n          d: generateLinkPath(link),\n          stroke: link.color,\n          strokeWidth: Math.max(2, link.value / 100),\n          fill: \"none\",\n          opacity: 0.6,\n          className: \"transition-opacity hover:opacity-100\"\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this)), sankeyData.nodes.map(node => /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n            x: node.x,\n            y: node.y,\n            width: node.width,\n            height: node.height,\n            fill: node.color,\n            rx: 4,\n            className: \"transition-all hover:opacity-80\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: node.id === 'income' ? (node.x || 0) - 10 : (node.x || 0) + (node.width || 0) + 10,\n            y: (node.y || 0) + (node.height || 0) / 2,\n            textAnchor: node.id === 'income' ? 'end' : 'start',\n            dominantBaseline: \"middle\",\n            className: \"text-xs font-medium fill-gray-700\",\n            children: node.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: node.id === 'income' ? (node.x || 0) - 10 : (node.x || 0) + (node.width || 0) + 10,\n            y: (node.y || 0) + (node.height || 0) / 2 + 15,\n            textAnchor: node.id === 'income' ? 'end' : 'start',\n            dominantBaseline: \"middle\",\n            className: \"text-xs fill-gray-500\",\n            children: formatCurrency(node.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)]\n        }, node.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\",\n      children: sankeyData.nodes.map(node => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-3 h-3 rounded\",\n          style: {\n            backgroundColor: node.color\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs text-gray-600\",\n          children: [node.name, \": \", formatCurrency(node.value)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)]\n      }, node.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4 p-4 bg-gray-50 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-2xl font-bold text-green-600\",\n          children: formatCurrency(data.monthlyNetIncome)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600\",\n          children: \"Total Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-2xl font-bold text-red-600\",\n          children: formatCurrency(data.totalExpenses)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600\",\n          children: \"Total Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-2xl font-bold text-blue-600\",\n          children: formatCurrency(data.savings)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600\",\n          children: [\"Savings (\", data.savingsPercentage.toFixed(1), \"%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n};\n_s(SankeyChart, \"pjMTtuktUnHdc+vzqKBUcdi1PYY=\");\n_c = SankeyChart;\nexport default SankeyChart;\nvar _c;\n$RefreshReg$(_c, \"SankeyChart\");","map":{"version":3,"names":["React","useState","useMemo","formatCurrency","jsxDEV","_jsxDEV","SankeyChart","data","_s","hoveredNode","setHoveredNode","hoveredLink","setHoveredLink","generateSankeyData","nodes","links","colors","income","savings","rent","utilities","groceries","restaurants","gas","medical","gym","travel","shopping","entertainment","miscellaneous","push","id","name","value","monthlyNetIncome","color","expenses","forEach","expense","index","nodeId","categoryKey","category","toLowerCase","replace","amount","source","target","sankeyData","containerWidth","containerHeight","nodeWidth","nodeSpacing","calculateLayout","leftNodes","filter","node","rightNodes","x","y","width","height","Math","max","currentY","generateLinkPath","link","sourceNode","find","n","targetNode","sourceX","sourceY","targetX","targetY","controlPoint1X","controlPoint2X","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","minWidth","map","d","stroke","strokeWidth","fill","opacity","rx","textAnchor","dominantBaseline","backgroundColor","totalExpenses","savingsPercentage","toFixed","_c","$RefreshReg$"],"sources":["/home/tanged/repo/Fortuna/src/components/SankeyChart.tsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { ParsedFinancialData } from '../types/finance';\nimport { formatCurrency } from '../utils/csvParser';\n\ninterface SankeyChartProps {\n  data: ParsedFinancialData;\n}\n\ninterface SankeyNode {\n  id: string;\n  name: string;\n  value: number;\n  color: string;\n  x?: number;\n  y?: number;\n  width?: number;\n  height?: number;\n}\n\ninterface SankeyLink {\n  source: string;\n  target: string;\n  value: number;\n  color: string;\n}\n\ninterface SankeyData {\n  nodes: SankeyNode[];\n  links: SankeyLink[];\n}\n\nconst SankeyChart: React.FC<SankeyChartProps> = ({ data }) => {\n  const [hoveredNode, setHoveredNode] = useState<string | null>(null);\n  const [hoveredLink, setHoveredLink] = useState<number | null>(null);\n\n  // Generate Sankey data from financial data\n  const generateSankeyData = useMemo((): SankeyData => {\n    const nodes: SankeyNode[] = [];\n    const links: SankeyLink[] = [];\n\n    // Define colors for different categories\n    const colors = {\n      income: '#10B981', // Green\n      savings: '#3B82F6', // Blue\n      rent: '#EF4444', // Red\n      utilities: '#F59E0B', // Orange\n      groceries: '#8B5CF6', // Purple\n      restaurants: '#EC4899', // Pink\n      gas: '#6B7280', // Gray\n      medical: '#F97316', // Orange\n      gym: '#84CC16', // Lime\n      travel: '#06B6D4', // Cyan\n      shopping: '#F43F5E', // Rose\n      entertainment: '#A855F7', // Violet\n      miscellaneous: '#64748B', // Slate\n    };\n\n    // Add income node\n    nodes.push({\n      id: 'income',\n      name: 'Monthly Income',\n      value: data.monthlyNetIncome,\n      color: colors.income\n    });\n\n    // Add expense nodes and links\n    data.expenses.forEach((expense, index) => {\n      const nodeId = `expense-${index}`;\n      const categoryKey = expense.category.toLowerCase().replace(/[^a-z]/g, '');\n      \n      nodes.push({\n        id: nodeId,\n        name: expense.category,\n        value: expense.amount,\n        color: colors[categoryKey as keyof typeof colors] || colors.miscellaneous\n      });\n\n      links.push({\n        source: 'income',\n        target: nodeId,\n        value: expense.amount,\n        color: colors[categoryKey as keyof typeof colors] || colors.miscellaneous\n      });\n    });\n\n    // Add savings node and link\n    if (data.savings > 0) {\n      nodes.push({\n        id: 'savings',\n        name: 'Savings',\n        value: data.savings,\n        color: colors.savings\n      });\n\n      links.push({\n        source: 'income',\n        target: 'savings',\n        value: data.savings,\n        color: colors.savings\n      });\n    }\n\n    return { nodes, links };\n  }, [data]);\n\n  const sankeyData = generateSankeyData();\n\n  // Calculate layout dimensions\n  const containerWidth = 900;\n  const containerHeight = 500;\n  const nodeWidth = 25;\n  const nodeSpacing = 15;\n\n  // Calculate node positions\n  const calculateLayout = () => {\n    const leftNodes = sankeyData.nodes.filter(node => node.id === 'income');\n    const rightNodes = sankeyData.nodes.filter(node => node.id !== 'income');\n\n    // Position income node on the left\n    leftNodes.forEach((node, index) => {\n      node.x = 50;\n      node.y = containerHeight / 2 - node.value / 2;\n      node.width = nodeWidth;\n      node.height = Math.max(20, node.value / 10);\n    });\n\n    // Position expense/savings nodes on the right\n    let currentY = 50;\n    rightNodes.forEach((node) => {\n      node.x = containerWidth - 150;\n      node.y = currentY;\n      node.width = nodeWidth;\n      node.height = Math.max(20, node.value / 10);\n      currentY += node.height + nodeSpacing;\n    });\n  };\n\n  calculateLayout();\n\n  // Generate SVG path for links\n  const generateLinkPath = (link: SankeyLink): string => {\n    const sourceNode = sankeyData.nodes.find(n => n.id === link.source);\n    const targetNode = sankeyData.nodes.find(n => n.id === link.target);\n    \n    if (!sourceNode || !targetNode) return '';\n\n    const sourceX = (sourceNode.x || 0) + (sourceNode.width || 0);\n    const sourceY = (sourceNode.y || 0) + (sourceNode.height || 0) / 2;\n    const targetX = targetNode.x || 0;\n    const targetY = (targetNode.y || 0) + (targetNode.height || 0) / 2;\n\n    const controlPoint1X = sourceX + (targetX - sourceX) * 0.3;\n    const controlPoint2X = sourceX + (targetX - sourceX) * 0.7;\n\n    return `M ${sourceX} ${sourceY} C ${controlPoint1X} ${sourceY}, ${controlPoint2X} ${targetY}, ${targetX} ${targetY}`;\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6\">\n      <div className=\"mb-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n          Money Flow Visualization\n        </h3>\n        <p className=\"text-sm text-gray-600\">\n          See how your monthly income flows into expenses and savings\n        </p>\n      </div>\n\n      <div className=\"overflow-x-auto\">\n        <svg\n          width={containerWidth}\n          height={containerHeight}\n          className=\"mx-auto\"\n          style={{ minWidth: containerWidth }}\n        >\n          {/* Render links */}\n          {sankeyData.links.map((link, index) => (\n            <path\n              key={index}\n              d={generateLinkPath(link)}\n              stroke={link.color}\n              strokeWidth={Math.max(2, link.value / 100)}\n              fill=\"none\"\n              opacity={0.6}\n              className=\"transition-opacity hover:opacity-100\"\n            />\n          ))}\n\n          {/* Render nodes */}\n          {sankeyData.nodes.map((node) => (\n            <g key={node.id}>\n              <rect\n                x={node.x}\n                y={node.y}\n                width={node.width}\n                height={node.height}\n                fill={node.color}\n                rx={4}\n                className=\"transition-all hover:opacity-80\"\n              />\n              \n              {/* Node labels */}\n              <text\n                x={node.id === 'income' ? (node.x || 0) - 10 : (node.x || 0) + (node.width || 0) + 10}\n                y={(node.y || 0) + (node.height || 0) / 2}\n                textAnchor={node.id === 'income' ? 'end' : 'start'}\n                dominantBaseline=\"middle\"\n                className=\"text-xs font-medium fill-gray-700\"\n              >\n                {node.name}\n              </text>\n              \n              {/* Value labels */}\n              <text\n                x={node.id === 'income' ? (node.x || 0) - 10 : (node.x || 0) + (node.width || 0) + 10}\n                y={(node.y || 0) + (node.height || 0) / 2 + 15}\n                textAnchor={node.id === 'income' ? 'end' : 'start'}\n                dominantBaseline=\"middle\"\n                className=\"text-xs fill-gray-500\"\n              >\n                {formatCurrency(node.value)}\n              </text>\n            </g>\n          ))}\n        </svg>\n      </div>\n\n      {/* Legend */}\n      <div className=\"mt-6 grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\">\n        {sankeyData.nodes.map((node) => (\n          <div key={node.id} className=\"flex items-center space-x-2\">\n            <div\n              className=\"w-3 h-3 rounded\"\n              style={{ backgroundColor: node.color }}\n            />\n            <span className=\"text-xs text-gray-600\">\n              {node.name}: {formatCurrency(node.value)}\n            </span>\n          </div>\n        ))}\n      </div>\n\n      {/* Summary Stats */}\n      <div className=\"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4 p-4 bg-gray-50 rounded-lg\">\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-green-600\">\n            {formatCurrency(data.monthlyNetIncome)}\n          </div>\n          <div className=\"text-sm text-gray-600\">Total Income</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-red-600\">\n            {formatCurrency(data.totalExpenses)}\n          </div>\n          <div className=\"text-sm text-gray-600\">Total Expenses</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-blue-600\">\n            {formatCurrency(data.savings)}\n          </div>\n          <div className=\"text-sm text-gray-600\">Savings ({data.savingsPercentage.toFixed(1)}%)</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SankeyChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}