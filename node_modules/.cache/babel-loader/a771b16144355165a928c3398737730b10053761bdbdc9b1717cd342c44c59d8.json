{"ast":null,"code":"var _jsxFileName = \"/home/tanged/repo/Fortuna/src/components/SankeyChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo, useRef, useCallback } from 'react';\nimport { formatCurrency } from '../utils/csvParser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SankeyChart = ({\n  data\n}) => {\n  _s();\n  const [hoveredNode, setHoveredNode] = useState(null);\n  const [hoveredLink, setHoveredLink] = useState(null);\n  const [zoom, setZoom] = useState(1);\n  const [pan, setPan] = useState({\n    x: 0,\n    y: 0\n  });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStart, setDragStart] = useState({\n    x: 0,\n    y: 0\n  });\n  const svgRef = useRef(null);\n\n  // Generate Sankey data from financial data\n  const sankeyData = useMemo(() => {\n    const nodes = [];\n    const links = [];\n\n    // Define colors for different categories\n    const colors = {\n      income: '#10B981',\n      // Green\n      savings: '#3B82F6',\n      // Blue\n      rent: '#EF4444',\n      // Red\n      utilities: '#F59E0B',\n      // Orange\n      groceries: '#8B5CF6',\n      // Purple\n      restaurants: '#EC4899',\n      // Pink\n      gas: '#6B7280',\n      // Gray\n      medical: '#F97316',\n      // Orange\n      gym: '#84CC16',\n      // Lime\n      travel: '#06B6D4',\n      // Cyan\n      shopping: '#F43F5E',\n      // Rose\n      entertainment: '#A855F7',\n      // Violet\n      miscellaneous: '#64748B' // Slate\n    };\n\n    // Add income node\n    nodes.push({\n      id: 'income',\n      name: 'Monthly Income',\n      value: data.monthlyNetIncome,\n      color: colors.income\n    });\n\n    // Add expense nodes and links\n    data.expenses.forEach((expense, index) => {\n      const nodeId = `expense-${index}`;\n      const categoryKey = expense.category.toLowerCase().replace(/[^a-z]/g, '');\n      nodes.push({\n        id: nodeId,\n        name: expense.category,\n        value: expense.amount,\n        color: colors[categoryKey] || colors.miscellaneous\n      });\n      links.push({\n        source: 'income',\n        target: nodeId,\n        value: expense.amount,\n        color: colors[categoryKey] || colors.miscellaneous\n      });\n    });\n\n    // Add savings node and link\n    if (data.savings > 0) {\n      nodes.push({\n        id: 'savings',\n        name: 'Savings',\n        value: data.savings,\n        color: colors.savings\n      });\n      links.push({\n        source: 'income',\n        target: 'savings',\n        value: data.savings,\n        color: colors.savings\n      });\n    }\n    return {\n      nodes,\n      links\n    };\n  }, [data]);\n\n  // Calculate layout dimensions - make responsive\n  const containerWidth = 900;\n  const nodeWidth = 25;\n  const nodeSpacing = 15;\n\n  // Calculate proportional scaling - income bar should equal sum of all outgoing flows\n  const totalOutgoing = data.expenses.reduce((sum, expense) => sum + expense.amount, 0) + data.savings;\n  const maxAmount = Math.max(data.monthlyNetIncome, totalOutgoing);\n  const minNodeHeight = 20;\n  const maxNodeHeight = 80;\n  const scaleFactor = (maxNodeHeight - minNodeHeight) / maxAmount;\n\n  // Calculate dynamic height based on proportional node sizes\n  const rightNodesCount = sankeyData.nodes.filter(node => node.id !== 'income').length;\n  const totalNodeHeights = sankeyData.nodes.reduce((sum, node) => {\n    const proportionalHeight = Math.max(minNodeHeight, node.value * scaleFactor);\n    return sum + proportionalHeight;\n  }, 0);\n  const totalSpacing = (rightNodesCount - 1) * nodeSpacing;\n  const calculatedHeight = Math.max(400, totalNodeHeights + totalSpacing + 100);\n  const containerHeight = calculatedHeight;\n\n  // Calculate node positions\n  const calculateLayout = () => {\n    const leftNodes = sankeyData.nodes.filter(node => node.id === 'income');\n    const rightNodes = sankeyData.nodes.filter(node => node.id !== 'income');\n\n    // Position income node on the left - height should equal total outgoing flows\n    leftNodes.forEach((node, index) => {\n      // Income bar height should equal the sum of all outgoing flows, not the income amount\n      const incomeBarHeight = Math.max(minNodeHeight, totalOutgoing * scaleFactor);\n      node.x = 80;\n      node.y = containerHeight / 2 - incomeBarHeight / 2;\n      node.width = nodeWidth;\n      node.height = incomeBarHeight;\n    });\n\n    // Position expense/savings nodes on the right with proportional heights\n    const totalRightNodesHeight = rightNodes.reduce((sum, node) => {\n      const proportionalHeight = Math.max(minNodeHeight, node.value * scaleFactor);\n      return sum + proportionalHeight;\n    }, 0);\n    const totalSpacing = (rightNodes.length - 1) * nodeSpacing;\n    const startY = Math.max(50, (containerHeight - totalRightNodesHeight - totalSpacing) / 2);\n    let currentY = startY;\n    rightNodes.forEach(node => {\n      const proportionalHeight = Math.max(minNodeHeight, node.value * scaleFactor);\n      node.x = containerWidth - 180;\n      node.y = currentY;\n      node.width = nodeWidth;\n      node.height = proportionalHeight;\n      currentY += node.height + nodeSpacing;\n    });\n  };\n  calculateLayout();\n\n  // Pan and zoom handlers\n  const handleWheel = useCallback(e => {\n    e.preventDefault();\n    const delta = e.deltaY > 0 ? 0.9 : 1.1;\n    const newZoom = Math.max(0.1, Math.min(3, zoom * delta));\n    setZoom(newZoom);\n  }, [zoom]);\n  const handleMouseDown = useCallback(e => {\n    if (e.button === 0) {\n      // Left mouse button\n      setIsDragging(true);\n      setDragStart({\n        x: e.clientX - pan.x,\n        y: e.clientY - pan.y\n      });\n    }\n  }, [pan]);\n  const handleMouseMove = useCallback(e => {\n    if (isDragging) {\n      setPan({\n        x: e.clientX - dragStart.x,\n        y: e.clientY - dragStart.y\n      });\n    }\n  }, [isDragging, dragStart]);\n  const handleMouseUp = useCallback(() => {\n    setIsDragging(false);\n  }, []);\n  const resetView = useCallback(() => {\n    setZoom(1);\n    setPan({\n      x: 0,\n      y: 0\n    });\n  }, []);\n\n  // Touch support for mobile\n  const handleTouchStart = useCallback(e => {\n    if (e.touches.length === 1) {\n      const touch = e.touches[0];\n      setIsDragging(true);\n      setDragStart({\n        x: touch.clientX - pan.x,\n        y: touch.clientY - pan.y\n      });\n    }\n  }, [pan]);\n  const handleTouchMove = useCallback(e => {\n    if (isDragging && e.touches.length === 1) {\n      const touch = e.touches[0];\n      setPan({\n        x: touch.clientX - dragStart.x,\n        y: touch.clientY - dragStart.y\n      });\n    }\n  }, [isDragging, dragStart]);\n  const handleTouchEnd = useCallback(() => {\n    setIsDragging(false);\n  }, []);\n\n  // Generate SVG path for links\n  const generateLinkPath = link => {\n    const sourceNode = sankeyData.nodes.find(n => n.id === link.source);\n    const targetNode = sankeyData.nodes.find(n => n.id === link.target);\n    if (!sourceNode || !targetNode) return '';\n    const sourceX = (sourceNode.x || 0) + (sourceNode.width || 0);\n    const sourceY = (sourceNode.y || 0) + (sourceNode.height || 0) / 2;\n    const targetX = targetNode.x || 0;\n    const targetY = (targetNode.y || 0) + (targetNode.height || 0) / 2;\n    const controlPoint1X = sourceX + (targetX - sourceX) * 0.3;\n    const controlPoint2X = sourceX + (targetX - sourceX) * 0.7;\n    return `M ${sourceX} ${sourceY} C ${controlPoint1X} ${sourceY}, ${controlPoint2X} ${targetY}, ${targetX} ${targetY}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-sm border border-gray-200 p-6 relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-gray-900 mb-2\",\n        children: \"Money Flow Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600\",\n        children: \"See how your monthly income flows into expenses and savings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4 flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setZoom(Math.max(0.1, zoom - 0.1)),\n            className: \"px-3 py-1 text-sm bg-gray-100 hover:bg-gray-200 rounded border\",\n            children: \"Zoom Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setZoom(Math.min(3, zoom + 0.1)),\n            className: \"px-3 py-1 text-sm bg-gray-100 hover:bg-gray-200 rounded border\",\n            children: \"Zoom In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: resetView,\n            className: \"px-3 py-1 text-sm bg-blue-100 hover:bg-blue-200 text-blue-700 rounded border\",\n            children: \"Reset View\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600\",\n          children: [\"Zoom: \", Math.round(zoom * 100), \"% | Scroll to zoom, drag to pan\", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-4 text-xs\",\n            children: [\"Scale: \", formatCurrency(totalOutgoing), \" = 100% height\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border border-gray-200 rounded-lg overflow-hidden\",\n        style: {\n          height: '600px',\n          cursor: isDragging ? 'grabbing' : 'grab'\n        },\n        onWheel: handleWheel,\n        onMouseDown: handleMouseDown,\n        onMouseMove: handleMouseMove,\n        onMouseUp: handleMouseUp,\n        onMouseLeave: handleMouseUp,\n        onTouchStart: handleTouchStart,\n        onTouchMove: handleTouchMove,\n        onTouchEnd: handleTouchEnd,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          ref: svgRef,\n          width: \"100%\",\n          height: \"100%\",\n          viewBox: `${-pan.x} ${-pan.y} ${containerWidth / zoom} ${containerHeight / zoom}`,\n          style: {\n            minWidth: containerWidth * zoom,\n            minHeight: containerHeight * zoom,\n            transform: `scale(${zoom})`,\n            transformOrigin: '0 0'\n          },\n          children: [sankeyData.links.map((link, index) => {\n            // Calculate proportional stroke width\n            const minStrokeWidth = 2;\n            const maxStrokeWidth = 20;\n            const proportionalStrokeWidth = Math.max(minStrokeWidth, link.value / maxAmount * maxStrokeWidth);\n            return /*#__PURE__*/_jsxDEV(\"path\", {\n              d: generateLinkPath(link),\n              stroke: link.color,\n              strokeWidth: proportionalStrokeWidth,\n              fill: \"none\",\n              opacity: hoveredLink === index ? 1 : 0.7,\n              className: \"transition-all duration-200 cursor-pointer\",\n              onMouseEnter: () => setHoveredLink(index),\n              onMouseLeave: () => setHoveredLink(null)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this);\n          }), sankeyData.nodes.map(node => /*#__PURE__*/_jsxDEV(\"g\", {\n            children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n              x: node.x,\n              y: node.y,\n              width: node.width,\n              height: node.height,\n              fill: node.color,\n              rx: 6,\n              className: \"transition-all duration-200 cursor-pointer shadow-sm\",\n              style: {\n                opacity: hoveredNode === node.id ? 0.9 : 1,\n                transform: hoveredNode === node.id ? 'scale(1.05)' : 'scale(1)',\n                filter: hoveredNode === node.id ? 'drop-shadow(0 4px 8px rgba(0,0,0,0.2))' : 'none'\n              },\n              onMouseEnter: () => setHoveredNode(node.id),\n              onMouseLeave: () => setHoveredNode(null)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: node.id === 'income' ? (node.x || 0) - 10 : (node.x || 0) + (node.width || 0) + 10,\n              y: (node.y || 0) + (node.height || 0) / 2,\n              textAnchor: node.id === 'income' ? 'end' : 'start',\n              dominantBaseline: \"middle\",\n              className: \"text-xs font-medium fill-gray-700\",\n              children: node.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n              x: node.id === 'income' ? (node.x || 0) - 10 : (node.x || 0) + (node.width || 0) + 10,\n              y: (node.y || 0) + (node.height || 0) / 2 + 15,\n              textAnchor: node.id === 'income' ? 'end' : 'start',\n              dominantBaseline: \"middle\",\n              className: \"text-xs fill-gray-500\",\n              children: formatCurrency(node.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 15\n            }, this)]\n          }, node.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), hoveredNode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bg-gray-900 text-white px-3 py-2 rounded-lg shadow-lg text-sm z-10 pointer-events-none\",\n      children: (() => {\n        const node = sankeyData.nodes.find(n => n.id === hoveredNode);\n        if (!node) return null;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-semibold\",\n            children: node.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-300\",\n            children: formatCurrency(node.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 17\n          }, this), node.id === 'income' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-400 mt-1\",\n            children: [data.savingsPercentage.toFixed(1), \"% saved\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 15\n        }, this);\n      })()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\",\n      children: sankeyData.nodes.map(node => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-3 h-3 rounded\",\n          style: {\n            backgroundColor: node.color\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs text-gray-600\",\n          children: [node.name, \": \", formatCurrency(node.value)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 13\n        }, this)]\n      }, node.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4 p-4 bg-gray-50 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-2xl font-bold text-green-600\",\n          children: formatCurrency(data.monthlyNetIncome)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600\",\n          children: \"Total Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-2xl font-bold text-red-600\",\n          children: formatCurrency(data.totalExpenses)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600\",\n          children: \"Total Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-2xl font-bold text-blue-600\",\n          children: formatCurrency(data.savings)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600\",\n          children: [\"Savings (\", data.savingsPercentage.toFixed(1), \"%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n};\n_s(SankeyChart, \"AbT/F23Wvjw1VSxObL7y/HzHKqw=\");\n_c = SankeyChart;\nexport default SankeyChart;\nvar _c;\n$RefreshReg$(_c, \"SankeyChart\");","map":{"version":3,"names":["React","useState","useMemo","useRef","useCallback","formatCurrency","jsxDEV","_jsxDEV","SankeyChart","data","_s","hoveredNode","setHoveredNode","hoveredLink","setHoveredLink","zoom","setZoom","pan","setPan","x","y","isDragging","setIsDragging","dragStart","setDragStart","svgRef","sankeyData","nodes","links","colors","income","savings","rent","utilities","groceries","restaurants","gas","medical","gym","travel","shopping","entertainment","miscellaneous","push","id","name","value","monthlyNetIncome","color","expenses","forEach","expense","index","nodeId","categoryKey","category","toLowerCase","replace","amount","source","target","containerWidth","nodeWidth","nodeSpacing","totalOutgoing","reduce","sum","maxAmount","Math","max","minNodeHeight","maxNodeHeight","scaleFactor","rightNodesCount","filter","node","length","totalNodeHeights","proportionalHeight","totalSpacing","calculatedHeight","containerHeight","calculateLayout","leftNodes","rightNodes","incomeBarHeight","width","height","totalRightNodesHeight","startY","currentY","handleWheel","e","preventDefault","delta","deltaY","newZoom","min","handleMouseDown","button","clientX","clientY","handleMouseMove","handleMouseUp","resetView","handleTouchStart","touches","touch","handleTouchMove","handleTouchEnd","generateLinkPath","link","sourceNode","find","n","targetNode","sourceX","sourceY","targetX","targetY","controlPoint1X","controlPoint2X","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","round","style","cursor","onWheel","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","ref","viewBox","minWidth","minHeight","transform","transformOrigin","map","minStrokeWidth","maxStrokeWidth","proportionalStrokeWidth","d","stroke","strokeWidth","fill","opacity","onMouseEnter","rx","textAnchor","dominantBaseline","savingsPercentage","toFixed","backgroundColor","totalExpenses","_c","$RefreshReg$"],"sources":["/home/tanged/repo/Fortuna/src/components/SankeyChart.tsx"],"sourcesContent":["import React, { useState, useMemo, useRef, useCallback } from 'react';\nimport { ParsedFinancialData } from '../types/finance';\nimport { formatCurrency } from '../utils/csvParser';\n\ninterface SankeyChartProps {\n  data: ParsedFinancialData;\n}\n\ninterface SankeyNode {\n  id: string;\n  name: string;\n  value: number;\n  color: string;\n  x?: number;\n  y?: number;\n  width?: number;\n  height?: number;\n}\n\ninterface SankeyLink {\n  source: string;\n  target: string;\n  value: number;\n  color: string;\n}\n\ninterface SankeyData {\n  nodes: SankeyNode[];\n  links: SankeyLink[];\n}\n\nconst SankeyChart: React.FC<SankeyChartProps> = ({ data }) => {\n  const [hoveredNode, setHoveredNode] = useState<string | null>(null);\n  const [hoveredLink, setHoveredLink] = useState<number | null>(null);\n  const [zoom, setZoom] = useState(1);\n  const [pan, setPan] = useState({ x: 0, y: 0 });\n  const [isDragging, setIsDragging] = useState(false);\n  const [dragStart, setDragStart] = useState({ x: 0, y: 0 });\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  // Generate Sankey data from financial data\n  const sankeyData = useMemo((): SankeyData => {\n    const nodes: SankeyNode[] = [];\n    const links: SankeyLink[] = [];\n\n    // Define colors for different categories\n    const colors = {\n      income: '#10B981', // Green\n      savings: '#3B82F6', // Blue\n      rent: '#EF4444', // Red\n      utilities: '#F59E0B', // Orange\n      groceries: '#8B5CF6', // Purple\n      restaurants: '#EC4899', // Pink\n      gas: '#6B7280', // Gray\n      medical: '#F97316', // Orange\n      gym: '#84CC16', // Lime\n      travel: '#06B6D4', // Cyan\n      shopping: '#F43F5E', // Rose\n      entertainment: '#A855F7', // Violet\n      miscellaneous: '#64748B', // Slate\n    };\n\n    // Add income node\n    nodes.push({\n      id: 'income',\n      name: 'Monthly Income',\n      value: data.monthlyNetIncome,\n      color: colors.income\n    });\n\n    // Add expense nodes and links\n    data.expenses.forEach((expense, index) => {\n      const nodeId = `expense-${index}`;\n      const categoryKey = expense.category.toLowerCase().replace(/[^a-z]/g, '');\n      \n      nodes.push({\n        id: nodeId,\n        name: expense.category,\n        value: expense.amount,\n        color: colors[categoryKey as keyof typeof colors] || colors.miscellaneous\n      });\n\n      links.push({\n        source: 'income',\n        target: nodeId,\n        value: expense.amount,\n        color: colors[categoryKey as keyof typeof colors] || colors.miscellaneous\n      });\n    });\n\n    // Add savings node and link\n    if (data.savings > 0) {\n      nodes.push({\n        id: 'savings',\n        name: 'Savings',\n        value: data.savings,\n        color: colors.savings\n      });\n\n      links.push({\n        source: 'income',\n        target: 'savings',\n        value: data.savings,\n        color: colors.savings\n      });\n    }\n\n    return { nodes, links };\n  }, [data]);\n\n  // Calculate layout dimensions - make responsive\n  const containerWidth = 900;\n  const nodeWidth = 25;\n  const nodeSpacing = 15;\n  \n  // Calculate proportional scaling - income bar should equal sum of all outgoing flows\n  const totalOutgoing = data.expenses.reduce((sum, expense) => sum + expense.amount, 0) + data.savings;\n  const maxAmount = Math.max(data.monthlyNetIncome, totalOutgoing);\n  const minNodeHeight = 20;\n  const maxNodeHeight = 80;\n  const scaleFactor = (maxNodeHeight - minNodeHeight) / maxAmount;\n  \n  // Calculate dynamic height based on proportional node sizes\n  const rightNodesCount = sankeyData.nodes.filter(node => node.id !== 'income').length;\n  const totalNodeHeights = sankeyData.nodes.reduce((sum, node) => {\n    const proportionalHeight = Math.max(minNodeHeight, node.value * scaleFactor);\n    return sum + proportionalHeight;\n  }, 0);\n  const totalSpacing = (rightNodesCount - 1) * nodeSpacing;\n  const calculatedHeight = Math.max(400, totalNodeHeights + totalSpacing + 100);\n  const containerHeight = calculatedHeight;\n\n  // Calculate node positions\n  const calculateLayout = () => {\n    const leftNodes = sankeyData.nodes.filter(node => node.id === 'income');\n    const rightNodes = sankeyData.nodes.filter(node => node.id !== 'income');\n\n    // Position income node on the left - height should equal total outgoing flows\n    leftNodes.forEach((node, index) => {\n      // Income bar height should equal the sum of all outgoing flows, not the income amount\n      const incomeBarHeight = Math.max(minNodeHeight, totalOutgoing * scaleFactor);\n      node.x = 80;\n      node.y = containerHeight / 2 - incomeBarHeight / 2;\n      node.width = nodeWidth;\n      node.height = incomeBarHeight;\n    });\n\n    // Position expense/savings nodes on the right with proportional heights\n    const totalRightNodesHeight = rightNodes.reduce((sum, node) => {\n      const proportionalHeight = Math.max(minNodeHeight, node.value * scaleFactor);\n      return sum + proportionalHeight;\n    }, 0);\n    \n    const totalSpacing = (rightNodes.length - 1) * nodeSpacing;\n    const startY = Math.max(50, (containerHeight - totalRightNodesHeight - totalSpacing) / 2);\n    \n    let currentY = startY;\n    rightNodes.forEach((node) => {\n      const proportionalHeight = Math.max(minNodeHeight, node.value * scaleFactor);\n      node.x = containerWidth - 180;\n      node.y = currentY;\n      node.width = nodeWidth;\n      node.height = proportionalHeight;\n      currentY += node.height + nodeSpacing;\n    });\n  };\n\n  calculateLayout();\n\n  // Pan and zoom handlers\n  const handleWheel = useCallback((e: React.WheelEvent) => {\n    e.preventDefault();\n    const delta = e.deltaY > 0 ? 0.9 : 1.1;\n    const newZoom = Math.max(0.1, Math.min(3, zoom * delta));\n    setZoom(newZoom);\n  }, [zoom]);\n\n  const handleMouseDown = useCallback((e: React.MouseEvent) => {\n    if (e.button === 0) { // Left mouse button\n      setIsDragging(true);\n      setDragStart({ x: e.clientX - pan.x, y: e.clientY - pan.y });\n    }\n  }, [pan]);\n\n  const handleMouseMove = useCallback((e: React.MouseEvent) => {\n    if (isDragging) {\n      setPan({\n        x: e.clientX - dragStart.x,\n        y: e.clientY - dragStart.y\n      });\n    }\n  }, [isDragging, dragStart]);\n\n  const handleMouseUp = useCallback(() => {\n    setIsDragging(false);\n  }, []);\n\n  const resetView = useCallback(() => {\n    setZoom(1);\n    setPan({ x: 0, y: 0 });\n  }, []);\n\n  // Touch support for mobile\n  const handleTouchStart = useCallback((e: React.TouchEvent) => {\n    if (e.touches.length === 1) {\n      const touch = e.touches[0];\n      setIsDragging(true);\n      setDragStart({ x: touch.clientX - pan.x, y: touch.clientY - pan.y });\n    }\n  }, [pan]);\n\n  const handleTouchMove = useCallback((e: React.TouchEvent) => {\n    if (isDragging && e.touches.length === 1) {\n      const touch = e.touches[0];\n      setPan({\n        x: touch.clientX - dragStart.x,\n        y: touch.clientY - dragStart.y\n      });\n    }\n  }, [isDragging, dragStart]);\n\n  const handleTouchEnd = useCallback(() => {\n    setIsDragging(false);\n  }, []);\n\n  // Generate SVG path for links\n  const generateLinkPath = (link: SankeyLink): string => {\n    const sourceNode = sankeyData.nodes.find(n => n.id === link.source);\n    const targetNode = sankeyData.nodes.find(n => n.id === link.target);\n    \n    if (!sourceNode || !targetNode) return '';\n\n    const sourceX = (sourceNode.x || 0) + (sourceNode.width || 0);\n    const sourceY = (sourceNode.y || 0) + (sourceNode.height || 0) / 2;\n    const targetX = targetNode.x || 0;\n    const targetY = (targetNode.y || 0) + (targetNode.height || 0) / 2;\n\n    const controlPoint1X = sourceX + (targetX - sourceX) * 0.3;\n    const controlPoint2X = sourceX + (targetX - sourceX) * 0.7;\n\n    return `M ${sourceX} ${sourceY} C ${controlPoint1X} ${sourceY}, ${controlPoint2X} ${targetY}, ${targetX} ${targetY}`;\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6 relative\">\n      <div className=\"mb-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n          Money Flow Visualization\n        </h3>\n        <p className=\"text-sm text-gray-600\">\n          See how your monthly income flows into expenses and savings\n        </p>\n      </div>\n\n      <div className=\"relative\">\n        {/* Controls */}\n        <div className=\"mb-4 flex justify-between items-center\">\n          <div className=\"flex space-x-2\">\n            <button\n              onClick={() => setZoom(Math.max(0.1, zoom - 0.1))}\n              className=\"px-3 py-1 text-sm bg-gray-100 hover:bg-gray-200 rounded border\"\n            >\n              Zoom Out\n            </button>\n            <button\n              onClick={() => setZoom(Math.min(3, zoom + 0.1))}\n              className=\"px-3 py-1 text-sm bg-gray-100 hover:bg-gray-200 rounded border\"\n            >\n              Zoom In\n            </button>\n            <button\n              onClick={resetView}\n              className=\"px-3 py-1 text-sm bg-blue-100 hover:bg-blue-200 text-blue-700 rounded border\"\n            >\n              Reset View\n            </button>\n          </div>\n          <div className=\"text-sm text-gray-600\">\n            Zoom: {Math.round(zoom * 100)}% | Scroll to zoom, drag to pan\n            <span className=\"ml-4 text-xs\">\n              Scale: {formatCurrency(totalOutgoing)} = 100% height\n            </span>\n          </div>\n        </div>\n\n        {/* Chart Container */}\n        <div \n          className=\"border border-gray-200 rounded-lg overflow-hidden\"\n          style={{ height: '600px', cursor: isDragging ? 'grabbing' : 'grab' }}\n          onWheel={handleWheel}\n          onMouseDown={handleMouseDown}\n          onMouseMove={handleMouseMove}\n          onMouseUp={handleMouseUp}\n          onMouseLeave={handleMouseUp}\n          onTouchStart={handleTouchStart}\n          onTouchMove={handleTouchMove}\n          onTouchEnd={handleTouchEnd}\n        >\n          <svg\n            ref={svgRef}\n            width=\"100%\"\n            height=\"100%\"\n            viewBox={`${-pan.x} ${-pan.y} ${containerWidth / zoom} ${containerHeight / zoom}`}\n            style={{ \n              minWidth: containerWidth * zoom, \n              minHeight: containerHeight * zoom,\n              transform: `scale(${zoom})`,\n              transformOrigin: '0 0'\n            }}\n          >\n          {/* Render links */}\n          {sankeyData.links.map((link, index) => {\n            // Calculate proportional stroke width\n            const minStrokeWidth = 2;\n            const maxStrokeWidth = 20;\n            const proportionalStrokeWidth = Math.max(minStrokeWidth, (link.value / maxAmount) * maxStrokeWidth);\n            \n            return (\n              <path\n                key={index}\n                d={generateLinkPath(link)}\n                stroke={link.color}\n                strokeWidth={proportionalStrokeWidth}\n                fill=\"none\"\n                opacity={hoveredLink === index ? 1 : 0.7}\n                className=\"transition-all duration-200 cursor-pointer\"\n                onMouseEnter={() => setHoveredLink(index)}\n                onMouseLeave={() => setHoveredLink(null)}\n              />\n            );\n          })}\n\n          {/* Render nodes */}\n          {sankeyData.nodes.map((node) => (\n            <g key={node.id}>\n              <rect\n                x={node.x}\n                y={node.y}\n                width={node.width}\n                height={node.height}\n                fill={node.color}\n                rx={6}\n                className=\"transition-all duration-200 cursor-pointer shadow-sm\"\n                style={{\n                  opacity: hoveredNode === node.id ? 0.9 : 1,\n                  transform: hoveredNode === node.id ? 'scale(1.05)' : 'scale(1)',\n                  filter: hoveredNode === node.id ? 'drop-shadow(0 4px 8px rgba(0,0,0,0.2))' : 'none'\n                }}\n                onMouseEnter={() => setHoveredNode(node.id)}\n                onMouseLeave={() => setHoveredNode(null)}\n              />\n              \n              {/* Node labels */}\n              <text\n                x={node.id === 'income' ? (node.x || 0) - 10 : (node.x || 0) + (node.width || 0) + 10}\n                y={(node.y || 0) + (node.height || 0) / 2}\n                textAnchor={node.id === 'income' ? 'end' : 'start'}\n                dominantBaseline=\"middle\"\n                className=\"text-xs font-medium fill-gray-700\"\n              >\n                {node.name}\n              </text>\n              \n              {/* Value labels */}\n              <text\n                x={node.id === 'income' ? (node.x || 0) - 10 : (node.x || 0) + (node.width || 0) + 10}\n                y={(node.y || 0) + (node.height || 0) / 2 + 15}\n                textAnchor={node.id === 'income' ? 'end' : 'start'}\n                dominantBaseline=\"middle\"\n                className=\"text-xs fill-gray-500\"\n              >\n                {formatCurrency(node.value)}\n              </text>\n            </g>\n          ))}\n          </svg>\n        </div>\n      </div>\n\n      {/* Tooltip */}\n      {hoveredNode && (\n        <div className=\"absolute bg-gray-900 text-white px-3 py-2 rounded-lg shadow-lg text-sm z-10 pointer-events-none\">\n          {(() => {\n            const node = sankeyData.nodes.find(n => n.id === hoveredNode);\n            if (!node) return null;\n            return (\n              <div>\n                <div className=\"font-semibold\">{node.name}</div>\n                <div className=\"text-gray-300\">{formatCurrency(node.value)}</div>\n                {node.id === 'income' && (\n                  <div className=\"text-xs text-gray-400 mt-1\">\n                    {data.savingsPercentage.toFixed(1)}% saved\n                  </div>\n                )}\n              </div>\n            );\n          })()}\n        </div>\n      )}\n\n      {/* Legend */}\n      <div className=\"mt-6 grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\">\n        {sankeyData.nodes.map((node) => (\n          <div key={node.id} className=\"flex items-center space-x-2\">\n            <div\n              className=\"w-3 h-3 rounded\"\n              style={{ backgroundColor: node.color }}\n            />\n            <span className=\"text-xs text-gray-600\">\n              {node.name}: {formatCurrency(node.value)}\n            </span>\n          </div>\n        ))}\n      </div>\n\n      {/* Summary Stats */}\n      <div className=\"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4 p-4 bg-gray-50 rounded-lg\">\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-green-600\">\n            {formatCurrency(data.monthlyNetIncome)}\n          </div>\n          <div className=\"text-sm text-gray-600\">Total Income</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-red-600\">\n            {formatCurrency(data.totalExpenses)}\n          </div>\n          <div className=\"text-sm text-gray-600\">Total Expenses</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-blue-600\">\n            {formatCurrency(data.savings)}\n          </div>\n          <div className=\"text-sm text-gray-600\">Savings ({data.savingsPercentage.toFixed(1)}%)</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SankeyChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}