{"ast":null,"code":"import React,{useState}from'react';import{parseCSV}from'../utils/csvParser';import{formatCurrency}from'../utils/csvParser';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CSVUploader=_ref=>{let{onDataParsed}=_ref;const[isUploading,setIsUploading]=useState(false);const[lastResult,setLastResult]=useState(null);const handleFileUpload=async event=>{var _event$target$files;const file=(_event$target$files=event.target.files)===null||_event$target$files===void 0?void 0:_event$target$files[0];if(!file)return;setIsUploading(true);try{const csvContent=await file.text();const result=parseCSV(csvContent);setLastResult(result);onDataParsed(result);}catch(error){const errorResult={data:{monthlyNetIncome:0,expenses:[],totalExpenses:0,savings:0,savingsPercentage:0,annualReturn:7},errors:[\"Failed to read file: \".concat(error instanceof Error?error.message:'Unknown error')],warnings:[]};setLastResult(errorResult);onDataParsed(errorResult);}finally{setIsUploading(false);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"csv-upload\",className:\"block text-sm font-medium text-gray-700 mb-2\",children:\"Upload Financial CSV File\"}),/*#__PURE__*/_jsx(\"input\",{id:\"csv-upload\",type:\"file\",accept:\".csv\",onChange:handleFileUpload,disabled:isUploading,className:\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-1 text-xs text-gray-500\",children:\"Supports various CSV formats with income, expenses, and financial data\"})]}),isUploading&&/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2 text-blue-600\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Processing CSV...\"})]}),lastResult&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-3\",children:[lastResult.errors.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-red-50 border border-red-200 rounded-md p-3\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-medium text-red-800 mb-2\",children:\"Errors:\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"text-sm text-red-700 space-y-1\",children:lastResult.errors.map((error,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",error]},index))})]}),lastResult.warnings.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-yellow-50 border border-yellow-200 rounded-md p-3\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-medium text-yellow-800 mb-2\",children:\"Warnings:\"}),/*#__PURE__*/_jsx(\"ul\",{className:\"text-sm text-yellow-700 space-y-1\",children:lastResult.warnings.map((warning,index)=>/*#__PURE__*/_jsxs(\"li\",{children:[\"\\u2022 \",warning]},index))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-green-50 border border-green-200 rounded-md p-3\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-medium text-green-800 mb-2\",children:\"Parsed Data Summary:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-green-700 space-y-1\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"Monthly Income: \",formatCurrency(lastResult.data.monthlyNetIncome)]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Total Expenses: \",formatCurrency(lastResult.data.totalExpenses)]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Savings: \",formatCurrency(lastResult.data.savings),\" (\",lastResult.data.savingsPercentage.toFixed(1),\"%)\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Expenses Found: \",lastResult.data.expenses.length,\" categories\"]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Annual Return: \",lastResult.data.annualReturn,\"%\"]})]})]}),lastResult.data.expenses.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-gray-50 border border-gray-200 rounded-md p-3\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"text-sm font-medium text-gray-800 mb-2\",children:\"Expense Breakdown:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-1\",children:lastResult.data.expenses.map((expense,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-sm\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-700\",children:expense.category}),/*#__PURE__*/_jsx(\"span\",{className:\"text-gray-900 font-medium\",children:formatCurrency(expense.amount)})]},index))})]})]})]});};export default CSVUploader;","map":{"version":3,"names":["React","useState","parseCSV","formatCurrency","jsx","_jsx","jsxs","_jsxs","CSVUploader","_ref","onDataParsed","isUploading","setIsUploading","lastResult","setLastResult","handleFileUpload","event","_event$target$files","file","target","files","csvContent","text","result","error","errorResult","data","monthlyNetIncome","expenses","totalExpenses","savings","savingsPercentage","annualReturn","errors","concat","Error","message","warnings","className","children","htmlFor","id","type","accept","onChange","disabled","length","map","index","warning","toFixed","expense","category","amount"],"sources":["/home/tanged/repo/Fortuna/src/components/CSVUploader.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { parseCSV, ParseResult } from '../utils/csvParser';\nimport { formatCurrency } from '../utils/csvParser';\n\ninterface CSVUploaderProps {\n  onDataParsed: (result: ParseResult) => void;\n}\n\nconst CSVUploader: React.FC<CSVUploaderProps> = ({ onDataParsed }) => {\n  const [isUploading, setIsUploading] = useState(false);\n  const [lastResult, setLastResult] = useState<ParseResult | null>(null);\n\n  const handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const file = event.target.files?.[0];\n    if (!file) return;\n\n    setIsUploading(true);\n    \n    try {\n      const csvContent = await file.text();\n      const result = parseCSV(csvContent);\n      \n      setLastResult(result);\n      onDataParsed(result);\n      \n    } catch (error) {\n      const errorResult: ParseResult = {\n        data: {\n          monthlyNetIncome: 0,\n          expenses: [],\n          totalExpenses: 0,\n          savings: 0,\n          savingsPercentage: 0,\n          annualReturn: 7\n        },\n        errors: [`Failed to read file: ${error instanceof Error ? error.message : 'Unknown error'}`],\n        warnings: []\n      };\n      \n      setLastResult(errorResult);\n      onDataParsed(errorResult);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div>\n        <label htmlFor=\"csv-upload\" className=\"block text-sm font-medium text-gray-700 mb-2\">\n          Upload Financial CSV File\n        </label>\n        <input\n          id=\"csv-upload\"\n          type=\"file\"\n          accept=\".csv\"\n          onChange={handleFileUpload}\n          disabled={isUploading}\n          className=\"block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100\"\n        />\n        <p className=\"mt-1 text-xs text-gray-500\">\n          Supports various CSV formats with income, expenses, and financial data\n        </p>\n      </div>\n\n      {isUploading && (\n        <div className=\"flex items-center space-x-2 text-blue-600\">\n          <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"></div>\n          <span>Processing CSV...</span>\n        </div>\n      )}\n\n      {lastResult && (\n        <div className=\"space-y-3\">\n          {/* Errors */}\n          {lastResult.errors.length > 0 && (\n            <div className=\"bg-red-50 border border-red-200 rounded-md p-3\">\n              <h4 className=\"text-sm font-medium text-red-800 mb-2\">Errors:</h4>\n              <ul className=\"text-sm text-red-700 space-y-1\">\n                {lastResult.errors.map((error, index) => (\n                  <li key={index}>• {error}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n\n          {/* Warnings */}\n          {lastResult.warnings.length > 0 && (\n            <div className=\"bg-yellow-50 border border-yellow-200 rounded-md p-3\">\n              <h4 className=\"text-sm font-medium text-yellow-800 mb-2\">Warnings:</h4>\n              <ul className=\"text-sm text-yellow-700 space-y-1\">\n                {lastResult.warnings.map((warning, index) => (\n                  <li key={index}>• {warning}</li>\n                ))}\n              </ul>\n            </div>\n          )}\n\n          {/* Parsed Data Summary */}\n          <div className=\"bg-green-50 border border-green-200 rounded-md p-3\">\n            <h4 className=\"text-sm font-medium text-green-800 mb-2\">Parsed Data Summary:</h4>\n            <div className=\"text-sm text-green-700 space-y-1\">\n              <div>Monthly Income: {formatCurrency(lastResult.data.monthlyNetIncome)}</div>\n              <div>Total Expenses: {formatCurrency(lastResult.data.totalExpenses)}</div>\n              <div>Savings: {formatCurrency(lastResult.data.savings)} ({lastResult.data.savingsPercentage.toFixed(1)}%)</div>\n              <div>Expenses Found: {lastResult.data.expenses.length} categories</div>\n              <div>Annual Return: {lastResult.data.annualReturn}%</div>\n            </div>\n          </div>\n\n          {/* Expense Breakdown */}\n          {lastResult.data.expenses.length > 0 && (\n            <div className=\"bg-gray-50 border border-gray-200 rounded-md p-3\">\n              <h4 className=\"text-sm font-medium text-gray-800 mb-2\">Expense Breakdown:</h4>\n              <div className=\"space-y-1\">\n                {lastResult.data.expenses.map((expense, index) => (\n                  <div key={index} className=\"flex justify-between text-sm\">\n                    <span className=\"text-gray-700\">{expense.category}</span>\n                    <span className=\"text-gray-900 font-medium\">{formatCurrency(expense.amount)}</span>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CSVUploader;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}