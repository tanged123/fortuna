{"ast":null,"code":"import React,{useState,useMemo}from'react';import{formatCurrency}from'../utils/csvParser';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SankeyChart=_ref=>{let{data}=_ref;const[hoveredNode,setHoveredNode]=useState(null);const[hoveredLink,setHoveredLink]=useState(null);// Generate Sankey data from financial data\nconst sankeyData=useMemo(()=>{const nodes=[];const links=[];// Define colors for different categories\nconst colors={income:'#10B981',// Green\nsavings:'#3B82F6',// Blue\nrent:'#EF4444',// Red\nutilities:'#F59E0B',// Orange\ngroceries:'#8B5CF6',// Purple\nrestaurants:'#EC4899',// Pink\ngas:'#6B7280',// Gray\nmedical:'#F97316',// Orange\ngym:'#84CC16',// Lime\ntravel:'#06B6D4',// Cyan\nshopping:'#F43F5E',// Rose\nentertainment:'#A855F7',// Violet\nmiscellaneous:'#64748B'// Slate\n};// Add income node\nnodes.push({id:'income',name:'Monthly Income',value:data.monthlyNetIncome,color:colors.income});// Add expense nodes and links\ndata.expenses.forEach((expense,index)=>{const nodeId=\"expense-\".concat(index);const categoryKey=expense.category.toLowerCase().replace(/[^a-z]/g,'');nodes.push({id:nodeId,name:expense.category,value:expense.amount,color:colors[categoryKey]||colors.miscellaneous});links.push({source:'income',target:nodeId,value:expense.amount,color:colors[categoryKey]||colors.miscellaneous});});// Add savings node and link\nif(data.savings>0){nodes.push({id:'savings',name:'Savings',value:data.savings,color:colors.savings});links.push({source:'income',target:'savings',value:data.savings,color:colors.savings});}return{nodes,links};},[data]);// Calculate layout dimensions\nconst containerWidth=900;const containerHeight=500;const nodeWidth=25;const nodeSpacing=15;// Calculate node positions\nconst calculateLayout=()=>{const leftNodes=sankeyData.nodes.filter(node=>node.id==='income');const rightNodes=sankeyData.nodes.filter(node=>node.id!=='income');// Position income node on the left\nleftNodes.forEach((node,index)=>{node.x=80;node.y=containerHeight/2-Math.max(40,node.value/8)/2;node.width=nodeWidth;node.height=Math.max(40,node.value/8);});// Position expense/savings nodes on the right\nlet currentY=60;rightNodes.forEach(node=>{node.x=containerWidth-180;node.y=currentY;node.width=nodeWidth;node.height=Math.max(25,node.value/12);currentY+=node.height+nodeSpacing;});};calculateLayout();// Generate SVG path for links\nconst generateLinkPath=link=>{const sourceNode=sankeyData.nodes.find(n=>n.id===link.source);const targetNode=sankeyData.nodes.find(n=>n.id===link.target);if(!sourceNode||!targetNode)return'';const sourceX=(sourceNode.x||0)+(sourceNode.width||0);const sourceY=(sourceNode.y||0)+(sourceNode.height||0)/2;const targetX=targetNode.x||0;const targetY=(targetNode.y||0)+(targetNode.height||0)/2;const controlPoint1X=sourceX+(targetX-sourceX)*0.3;const controlPoint2X=sourceX+(targetX-sourceX)*0.7;return\"M \".concat(sourceX,\" \").concat(sourceY,\" C \").concat(controlPoint1X,\" \").concat(sourceY,\", \").concat(controlPoint2X,\" \").concat(targetY,\", \").concat(targetX,\" \").concat(targetY);};return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white rounded-lg shadow-sm border border-gray-200 p-6 relative\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-900 mb-2\",children:\"Money Flow Visualization\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600\",children:\"See how your monthly income flows into expenses and savings\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"overflow-x-auto relative\",children:/*#__PURE__*/_jsxs(\"svg\",{width:containerWidth,height:containerHeight,className:\"mx-auto\",style:{minWidth:containerWidth},children:[sankeyData.links.map((link,index)=>/*#__PURE__*/_jsx(\"path\",{d:generateLinkPath(link),stroke:link.color,strokeWidth:Math.max(3,link.value/80),fill:\"none\",opacity:hoveredLink===index?1:0.7,className:\"transition-all duration-200 cursor-pointer\",onMouseEnter:()=>setHoveredLink(index),onMouseLeave:()=>setHoveredLink(null)},index)),sankeyData.nodes.map(node=>/*#__PURE__*/_jsxs(\"g\",{children:[/*#__PURE__*/_jsx(\"rect\",{x:node.x,y:node.y,width:node.width,height:node.height,fill:node.color,rx:6,className:\"transition-all duration-200 cursor-pointer shadow-sm\",style:{opacity:hoveredNode===node.id?0.9:1,transform:hoveredNode===node.id?'scale(1.05)':'scale(1)',filter:hoveredNode===node.id?'drop-shadow(0 4px 8px rgba(0,0,0,0.2))':'none'},onMouseEnter:()=>setHoveredNode(node.id),onMouseLeave:()=>setHoveredNode(null)}),/*#__PURE__*/_jsx(\"text\",{x:node.id==='income'?(node.x||0)-10:(node.x||0)+(node.width||0)+10,y:(node.y||0)+(node.height||0)/2,textAnchor:node.id==='income'?'end':'start',dominantBaseline:\"middle\",className:\"text-xs font-medium fill-gray-700\",children:node.name}),/*#__PURE__*/_jsx(\"text\",{x:node.id==='income'?(node.x||0)-10:(node.x||0)+(node.width||0)+10,y:(node.y||0)+(node.height||0)/2+15,textAnchor:node.id==='income'?'end':'start',dominantBaseline:\"middle\",className:\"text-xs fill-gray-500\",children:formatCurrency(node.value)})]},node.id))]})}),hoveredNode&&/*#__PURE__*/_jsx(\"div\",{className:\"absolute bg-gray-900 text-white px-3 py-2 rounded-lg shadow-lg text-sm z-10 pointer-events-none\",children:(()=>{const node=sankeyData.nodes.find(n=>n.id===hoveredNode);if(!node)return null;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-semibold\",children:node.name}),/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-300\",children:formatCurrency(node.value)}),node.id==='income'&&/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-400 mt-1\",children:[data.savingsPercentage.toFixed(1),\"% saved\"]})]});})()}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-6 grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\",children:sankeyData.nodes.map(node=>/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-3 h-3 rounded\",style:{backgroundColor:node.color}}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-xs text-gray-600\",children:[node.name,\": \",formatCurrency(node.value)]})]},node.id))}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4 p-4 bg-gray-50 rounded-lg\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold text-green-600\",children:formatCurrency(data.monthlyNetIncome)}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:\"Total Income\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold text-red-600\",children:formatCurrency(data.totalExpenses)}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm text-gray-600\",children:\"Total Expenses\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-2xl font-bold text-blue-600\",children:formatCurrency(data.savings)}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-600\",children:[\"Savings (\",data.savingsPercentage.toFixed(1),\"%)\"]})]})]})]});};export default SankeyChart;","map":{"version":3,"names":["React","useState","useMemo","formatCurrency","jsx","_jsx","jsxs","_jsxs","SankeyChart","_ref","data","hoveredNode","setHoveredNode","hoveredLink","setHoveredLink","sankeyData","nodes","links","colors","income","savings","rent","utilities","groceries","restaurants","gas","medical","gym","travel","shopping","entertainment","miscellaneous","push","id","name","value","monthlyNetIncome","color","expenses","forEach","expense","index","nodeId","concat","categoryKey","category","toLowerCase","replace","amount","source","target","containerWidth","containerHeight","nodeWidth","nodeSpacing","calculateLayout","leftNodes","filter","node","rightNodes","x","y","Math","max","width","height","currentY","generateLinkPath","link","sourceNode","find","n","targetNode","sourceX","sourceY","targetX","targetY","controlPoint1X","controlPoint2X","className","children","style","minWidth","map","d","stroke","strokeWidth","fill","opacity","onMouseEnter","onMouseLeave","rx","transform","textAnchor","dominantBaseline","savingsPercentage","toFixed","backgroundColor","totalExpenses"],"sources":["/home/tanged/repo/Fortuna/src/components/SankeyChart.tsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { ParsedFinancialData } from '../types/finance';\nimport { formatCurrency } from '../utils/csvParser';\n\ninterface SankeyChartProps {\n  data: ParsedFinancialData;\n}\n\ninterface SankeyNode {\n  id: string;\n  name: string;\n  value: number;\n  color: string;\n  x?: number;\n  y?: number;\n  width?: number;\n  height?: number;\n}\n\ninterface SankeyLink {\n  source: string;\n  target: string;\n  value: number;\n  color: string;\n}\n\ninterface SankeyData {\n  nodes: SankeyNode[];\n  links: SankeyLink[];\n}\n\nconst SankeyChart: React.FC<SankeyChartProps> = ({ data }) => {\n  const [hoveredNode, setHoveredNode] = useState<string | null>(null);\n  const [hoveredLink, setHoveredLink] = useState<number | null>(null);\n\n  // Generate Sankey data from financial data\n  const sankeyData = useMemo((): SankeyData => {\n    const nodes: SankeyNode[] = [];\n    const links: SankeyLink[] = [];\n\n    // Define colors for different categories\n    const colors = {\n      income: '#10B981', // Green\n      savings: '#3B82F6', // Blue\n      rent: '#EF4444', // Red\n      utilities: '#F59E0B', // Orange\n      groceries: '#8B5CF6', // Purple\n      restaurants: '#EC4899', // Pink\n      gas: '#6B7280', // Gray\n      medical: '#F97316', // Orange\n      gym: '#84CC16', // Lime\n      travel: '#06B6D4', // Cyan\n      shopping: '#F43F5E', // Rose\n      entertainment: '#A855F7', // Violet\n      miscellaneous: '#64748B', // Slate\n    };\n\n    // Add income node\n    nodes.push({\n      id: 'income',\n      name: 'Monthly Income',\n      value: data.monthlyNetIncome,\n      color: colors.income\n    });\n\n    // Add expense nodes and links\n    data.expenses.forEach((expense, index) => {\n      const nodeId = `expense-${index}`;\n      const categoryKey = expense.category.toLowerCase().replace(/[^a-z]/g, '');\n      \n      nodes.push({\n        id: nodeId,\n        name: expense.category,\n        value: expense.amount,\n        color: colors[categoryKey as keyof typeof colors] || colors.miscellaneous\n      });\n\n      links.push({\n        source: 'income',\n        target: nodeId,\n        value: expense.amount,\n        color: colors[categoryKey as keyof typeof colors] || colors.miscellaneous\n      });\n    });\n\n    // Add savings node and link\n    if (data.savings > 0) {\n      nodes.push({\n        id: 'savings',\n        name: 'Savings',\n        value: data.savings,\n        color: colors.savings\n      });\n\n      links.push({\n        source: 'income',\n        target: 'savings',\n        value: data.savings,\n        color: colors.savings\n      });\n    }\n\n    return { nodes, links };\n  }, [data]);\n\n  // Calculate layout dimensions\n  const containerWidth = 900;\n  const containerHeight = 500;\n  const nodeWidth = 25;\n  const nodeSpacing = 15;\n\n  // Calculate node positions\n  const calculateLayout = () => {\n    const leftNodes = sankeyData.nodes.filter(node => node.id === 'income');\n    const rightNodes = sankeyData.nodes.filter(node => node.id !== 'income');\n\n    // Position income node on the left\n    leftNodes.forEach((node, index) => {\n      node.x = 80;\n      node.y = containerHeight / 2 - Math.max(40, node.value / 8) / 2;\n      node.width = nodeWidth;\n      node.height = Math.max(40, node.value / 8);\n    });\n\n    // Position expense/savings nodes on the right\n    let currentY = 60;\n    rightNodes.forEach((node) => {\n      node.x = containerWidth - 180;\n      node.y = currentY;\n      node.width = nodeWidth;\n      node.height = Math.max(25, node.value / 12);\n      currentY += node.height + nodeSpacing;\n    });\n  };\n\n  calculateLayout();\n\n  // Generate SVG path for links\n  const generateLinkPath = (link: SankeyLink): string => {\n    const sourceNode = sankeyData.nodes.find(n => n.id === link.source);\n    const targetNode = sankeyData.nodes.find(n => n.id === link.target);\n    \n    if (!sourceNode || !targetNode) return '';\n\n    const sourceX = (sourceNode.x || 0) + (sourceNode.width || 0);\n    const sourceY = (sourceNode.y || 0) + (sourceNode.height || 0) / 2;\n    const targetX = targetNode.x || 0;\n    const targetY = (targetNode.y || 0) + (targetNode.height || 0) / 2;\n\n    const controlPoint1X = sourceX + (targetX - sourceX) * 0.3;\n    const controlPoint2X = sourceX + (targetX - sourceX) * 0.7;\n\n    return `M ${sourceX} ${sourceY} C ${controlPoint1X} ${sourceY}, ${controlPoint2X} ${targetY}, ${targetX} ${targetY}`;\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6 relative\">\n      <div className=\"mb-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n          Money Flow Visualization\n        </h3>\n        <p className=\"text-sm text-gray-600\">\n          See how your monthly income flows into expenses and savings\n        </p>\n      </div>\n\n      <div className=\"overflow-x-auto relative\">\n        <svg\n          width={containerWidth}\n          height={containerHeight}\n          className=\"mx-auto\"\n          style={{ minWidth: containerWidth }}\n        >\n          {/* Render links */}\n          {sankeyData.links.map((link, index) => (\n            <path\n              key={index}\n              d={generateLinkPath(link)}\n              stroke={link.color}\n              strokeWidth={Math.max(3, link.value / 80)}\n              fill=\"none\"\n              opacity={hoveredLink === index ? 1 : 0.7}\n              className=\"transition-all duration-200 cursor-pointer\"\n              onMouseEnter={() => setHoveredLink(index)}\n              onMouseLeave={() => setHoveredLink(null)}\n            />\n          ))}\n\n          {/* Render nodes */}\n          {sankeyData.nodes.map((node) => (\n            <g key={node.id}>\n              <rect\n                x={node.x}\n                y={node.y}\n                width={node.width}\n                height={node.height}\n                fill={node.color}\n                rx={6}\n                className=\"transition-all duration-200 cursor-pointer shadow-sm\"\n                style={{\n                  opacity: hoveredNode === node.id ? 0.9 : 1,\n                  transform: hoveredNode === node.id ? 'scale(1.05)' : 'scale(1)',\n                  filter: hoveredNode === node.id ? 'drop-shadow(0 4px 8px rgba(0,0,0,0.2))' : 'none'\n                }}\n                onMouseEnter={() => setHoveredNode(node.id)}\n                onMouseLeave={() => setHoveredNode(null)}\n              />\n              \n              {/* Node labels */}\n              <text\n                x={node.id === 'income' ? (node.x || 0) - 10 : (node.x || 0) + (node.width || 0) + 10}\n                y={(node.y || 0) + (node.height || 0) / 2}\n                textAnchor={node.id === 'income' ? 'end' : 'start'}\n                dominantBaseline=\"middle\"\n                className=\"text-xs font-medium fill-gray-700\"\n              >\n                {node.name}\n              </text>\n              \n              {/* Value labels */}\n              <text\n                x={node.id === 'income' ? (node.x || 0) - 10 : (node.x || 0) + (node.width || 0) + 10}\n                y={(node.y || 0) + (node.height || 0) / 2 + 15}\n                textAnchor={node.id === 'income' ? 'end' : 'start'}\n                dominantBaseline=\"middle\"\n                className=\"text-xs fill-gray-500\"\n              >\n                {formatCurrency(node.value)}\n              </text>\n            </g>\n          ))}\n        </svg>\n      </div>\n\n      {/* Tooltip */}\n      {hoveredNode && (\n        <div className=\"absolute bg-gray-900 text-white px-3 py-2 rounded-lg shadow-lg text-sm z-10 pointer-events-none\">\n          {(() => {\n            const node = sankeyData.nodes.find(n => n.id === hoveredNode);\n            if (!node) return null;\n            return (\n              <div>\n                <div className=\"font-semibold\">{node.name}</div>\n                <div className=\"text-gray-300\">{formatCurrency(node.value)}</div>\n                {node.id === 'income' && (\n                  <div className=\"text-xs text-gray-400 mt-1\">\n                    {data.savingsPercentage.toFixed(1)}% saved\n                  </div>\n                )}\n              </div>\n            );\n          })()}\n        </div>\n      )}\n\n      {/* Legend */}\n      <div className=\"mt-6 grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\">\n        {sankeyData.nodes.map((node) => (\n          <div key={node.id} className=\"flex items-center space-x-2\">\n            <div\n              className=\"w-3 h-3 rounded\"\n              style={{ backgroundColor: node.color }}\n            />\n            <span className=\"text-xs text-gray-600\">\n              {node.name}: {formatCurrency(node.value)}\n            </span>\n          </div>\n        ))}\n      </div>\n\n      {/* Summary Stats */}\n      <div className=\"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4 p-4 bg-gray-50 rounded-lg\">\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-green-600\">\n            {formatCurrency(data.monthlyNetIncome)}\n          </div>\n          <div className=\"text-sm text-gray-600\">Total Income</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-red-600\">\n            {formatCurrency(data.totalExpenses)}\n          </div>\n          <div className=\"text-sm text-gray-600\">Total Expenses</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-blue-600\">\n            {formatCurrency(data.savings)}\n          </div>\n          <div className=\"text-sm text-gray-600\">Savings ({data.savingsPercentage.toFixed(1)}%)</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SankeyChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}