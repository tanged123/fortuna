{"ast":null,"code":"var _jsxFileName = \"/home/tanged/repo/Fortuna/src/components/SankeyChart.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { formatCurrency } from '../utils/csvParser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SankeyChart = ({\n  data\n}) => {\n  _s();\n  const [hoveredNode, setHoveredNode] = useState(null);\n  const [hoveredLink, setHoveredLink] = useState(null);\n\n  // Generate Sankey data from financial data\n  const sankeyData = useMemo(() => {\n    const nodes = [];\n    const links = [];\n\n    // Define colors for different categories\n    const colors = {\n      income: '#10B981',\n      // Green\n      savings: '#3B82F6',\n      // Blue\n      rent: '#EF4444',\n      // Red\n      utilities: '#F59E0B',\n      // Orange\n      groceries: '#8B5CF6',\n      // Purple\n      restaurants: '#EC4899',\n      // Pink\n      gas: '#6B7280',\n      // Gray\n      medical: '#F97316',\n      // Orange\n      gym: '#84CC16',\n      // Lime\n      travel: '#06B6D4',\n      // Cyan\n      shopping: '#F43F5E',\n      // Rose\n      entertainment: '#A855F7',\n      // Violet\n      miscellaneous: '#64748B' // Slate\n    };\n\n    // Add income node\n    nodes.push({\n      id: 'income',\n      name: 'Monthly Income',\n      value: data.monthlyNetIncome,\n      color: colors.income\n    });\n\n    // Add expense nodes and links\n    data.expenses.forEach((expense, index) => {\n      const nodeId = `expense-${index}`;\n      const categoryKey = expense.category.toLowerCase().replace(/[^a-z]/g, '');\n      nodes.push({\n        id: nodeId,\n        name: expense.category,\n        value: expense.amount,\n        color: colors[categoryKey] || colors.miscellaneous\n      });\n      links.push({\n        source: 'income',\n        target: nodeId,\n        value: expense.amount,\n        color: colors[categoryKey] || colors.miscellaneous\n      });\n    });\n\n    // Add savings node and link\n    if (data.savings > 0) {\n      nodes.push({\n        id: 'savings',\n        name: 'Savings',\n        value: data.savings,\n        color: colors.savings\n      });\n      links.push({\n        source: 'income',\n        target: 'savings',\n        value: data.savings,\n        color: colors.savings\n      });\n    }\n    return {\n      nodes,\n      links\n    };\n  }, [data]);\n\n  // Calculate layout dimensions - make responsive\n  const containerWidth = 900;\n  const nodeWidth = 25;\n  const nodeSpacing = 15;\n\n  // Calculate dynamic height based on number of nodes\n  const rightNodesCount = sankeyData.nodes.filter(node => node.id !== 'income').length;\n  const minNodeHeight = 25;\n  const calculatedHeight = Math.max(400, rightNodesCount * (minNodeHeight + nodeSpacing) + 100);\n  const containerHeight = calculatedHeight;\n\n  // Calculate node positions\n  const calculateLayout = () => {\n    const leftNodes = sankeyData.nodes.filter(node => node.id === 'income');\n    const rightNodes = sankeyData.nodes.filter(node => node.id !== 'income');\n\n    // Position income node on the left\n    leftNodes.forEach((node, index) => {\n      node.x = 80;\n      node.y = containerHeight / 2 - Math.max(40, node.value / 8) / 2;\n      node.width = nodeWidth;\n      node.height = Math.max(40, node.value / 8);\n    });\n\n    // Position expense/savings nodes on the right with better spacing\n    const totalRightNodesHeight = rightNodes.reduce((sum, node) => {\n      const nodeHeight = Math.max(minNodeHeight, node.value / 12);\n      return sum + nodeHeight;\n    }, 0);\n    const totalSpacing = (rightNodes.length - 1) * nodeSpacing;\n    const startY = Math.max(50, (containerHeight - totalRightNodesHeight - totalSpacing) / 2);\n    let currentY = startY;\n    rightNodes.forEach(node => {\n      node.x = containerWidth - 180;\n      node.y = currentY;\n      node.width = nodeWidth;\n      node.height = Math.max(minNodeHeight, node.value / 12);\n      currentY += node.height + nodeSpacing;\n    });\n  };\n  calculateLayout();\n\n  // Generate SVG path for links\n  const generateLinkPath = link => {\n    const sourceNode = sankeyData.nodes.find(n => n.id === link.source);\n    const targetNode = sankeyData.nodes.find(n => n.id === link.target);\n    if (!sourceNode || !targetNode) return '';\n    const sourceX = (sourceNode.x || 0) + (sourceNode.width || 0);\n    const sourceY = (sourceNode.y || 0) + (sourceNode.height || 0) / 2;\n    const targetX = targetNode.x || 0;\n    const targetY = (targetNode.y || 0) + (targetNode.height || 0) / 2;\n    const controlPoint1X = sourceX + (targetX - sourceX) * 0.3;\n    const controlPoint2X = sourceX + (targetX - sourceX) * 0.7;\n    return `M ${sourceX} ${sourceY} C ${controlPoint1X} ${sourceY}, ${controlPoint2X} ${targetY}, ${targetX} ${targetY}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-sm border border-gray-200 p-6 relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-gray-900 mb-2\",\n        children: \"Money Flow Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-gray-600\",\n        children: \"See how your monthly income flows into expenses and savings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-auto relative\",\n      style: {\n        maxHeight: '80vh'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        width: containerWidth,\n        height: containerHeight,\n        className: \"mx-auto\",\n        style: {\n          minWidth: containerWidth,\n          minHeight: containerHeight\n        },\n        children: [sankeyData.links.map((link, index) => /*#__PURE__*/_jsxDEV(\"path\", {\n          d: generateLinkPath(link),\n          stroke: link.color,\n          strokeWidth: Math.max(3, link.value / 80),\n          fill: \"none\",\n          opacity: hoveredLink === index ? 1 : 0.7,\n          className: \"transition-all duration-200 cursor-pointer\",\n          onMouseEnter: () => setHoveredLink(index),\n          onMouseLeave: () => setHoveredLink(null)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)), sankeyData.nodes.map(node => /*#__PURE__*/_jsxDEV(\"g\", {\n          children: [/*#__PURE__*/_jsxDEV(\"rect\", {\n            x: node.x,\n            y: node.y,\n            width: node.width,\n            height: node.height,\n            fill: node.color,\n            rx: 6,\n            className: \"transition-all duration-200 cursor-pointer shadow-sm\",\n            style: {\n              opacity: hoveredNode === node.id ? 0.9 : 1,\n              transform: hoveredNode === node.id ? 'scale(1.05)' : 'scale(1)',\n              filter: hoveredNode === node.id ? 'drop-shadow(0 4px 8px rgba(0,0,0,0.2))' : 'none'\n            },\n            onMouseEnter: () => setHoveredNode(node.id),\n            onMouseLeave: () => setHoveredNode(null)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: node.id === 'income' ? (node.x || 0) - 10 : (node.x || 0) + (node.width || 0) + 10,\n            y: (node.y || 0) + (node.height || 0) / 2,\n            textAnchor: node.id === 'income' ? 'end' : 'start',\n            dominantBaseline: \"middle\",\n            className: \"text-xs font-medium fill-gray-700\",\n            children: node.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: node.id === 'income' ? (node.x || 0) - 10 : (node.x || 0) + (node.width || 0) + 10,\n            y: (node.y || 0) + (node.height || 0) / 2 + 15,\n            textAnchor: node.id === 'income' ? 'end' : 'start',\n            dominantBaseline: \"middle\",\n            className: \"text-xs fill-gray-500\",\n            children: formatCurrency(node.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)]\n        }, node.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), hoveredNode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute bg-gray-900 text-white px-3 py-2 rounded-lg shadow-lg text-sm z-10 pointer-events-none\",\n      children: (() => {\n        const node = sankeyData.nodes.find(n => n.id === hoveredNode);\n        if (!node) return null;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-semibold\",\n            children: node.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-300\",\n            children: formatCurrency(node.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 17\n          }, this), node.id === 'income' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-xs text-gray-400 mt-1\",\n            children: [data.savingsPercentage.toFixed(1), \"% saved\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }, this);\n      })()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\",\n      children: sankeyData.nodes.map(node => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-3 h-3 rounded\",\n          style: {\n            backgroundColor: node.color\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-xs text-gray-600\",\n          children: [node.name, \": \", formatCurrency(node.value)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this)]\n      }, node.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4 p-4 bg-gray-50 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-2xl font-bold text-green-600\",\n          children: formatCurrency(data.monthlyNetIncome)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600\",\n          children: \"Total Income\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-2xl font-bold text-red-600\",\n          children: formatCurrency(data.totalExpenses)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600\",\n          children: \"Total Expenses\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-2xl font-bold text-blue-600\",\n          children: formatCurrency(data.savings)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm text-gray-600\",\n          children: [\"Savings (\", data.savingsPercentage.toFixed(1), \"%)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 5\n  }, this);\n};\n_s(SankeyChart, \"64ItMllQrqDBhFn3+Hufrgg4SCM=\");\n_c = SankeyChart;\nexport default SankeyChart;\nvar _c;\n$RefreshReg$(_c, \"SankeyChart\");","map":{"version":3,"names":["React","useState","useMemo","formatCurrency","jsxDEV","_jsxDEV","SankeyChart","data","_s","hoveredNode","setHoveredNode","hoveredLink","setHoveredLink","sankeyData","nodes","links","colors","income","savings","rent","utilities","groceries","restaurants","gas","medical","gym","travel","shopping","entertainment","miscellaneous","push","id","name","value","monthlyNetIncome","color","expenses","forEach","expense","index","nodeId","categoryKey","category","toLowerCase","replace","amount","source","target","containerWidth","nodeWidth","nodeSpacing","rightNodesCount","filter","node","length","minNodeHeight","calculatedHeight","Math","max","containerHeight","calculateLayout","leftNodes","rightNodes","x","y","width","height","totalRightNodesHeight","reduce","sum","nodeHeight","totalSpacing","startY","currentY","generateLinkPath","link","sourceNode","find","n","targetNode","sourceX","sourceY","targetX","targetY","controlPoint1X","controlPoint2X","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","maxHeight","minWidth","minHeight","map","d","stroke","strokeWidth","fill","opacity","onMouseEnter","onMouseLeave","rx","transform","textAnchor","dominantBaseline","savingsPercentage","toFixed","backgroundColor","totalExpenses","_c","$RefreshReg$"],"sources":["/home/tanged/repo/Fortuna/src/components/SankeyChart.tsx"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { ParsedFinancialData } from '../types/finance';\nimport { formatCurrency } from '../utils/csvParser';\n\ninterface SankeyChartProps {\n  data: ParsedFinancialData;\n}\n\ninterface SankeyNode {\n  id: string;\n  name: string;\n  value: number;\n  color: string;\n  x?: number;\n  y?: number;\n  width?: number;\n  height?: number;\n}\n\ninterface SankeyLink {\n  source: string;\n  target: string;\n  value: number;\n  color: string;\n}\n\ninterface SankeyData {\n  nodes: SankeyNode[];\n  links: SankeyLink[];\n}\n\nconst SankeyChart: React.FC<SankeyChartProps> = ({ data }) => {\n  const [hoveredNode, setHoveredNode] = useState<string | null>(null);\n  const [hoveredLink, setHoveredLink] = useState<number | null>(null);\n\n  // Generate Sankey data from financial data\n  const sankeyData = useMemo((): SankeyData => {\n    const nodes: SankeyNode[] = [];\n    const links: SankeyLink[] = [];\n\n    // Define colors for different categories\n    const colors = {\n      income: '#10B981', // Green\n      savings: '#3B82F6', // Blue\n      rent: '#EF4444', // Red\n      utilities: '#F59E0B', // Orange\n      groceries: '#8B5CF6', // Purple\n      restaurants: '#EC4899', // Pink\n      gas: '#6B7280', // Gray\n      medical: '#F97316', // Orange\n      gym: '#84CC16', // Lime\n      travel: '#06B6D4', // Cyan\n      shopping: '#F43F5E', // Rose\n      entertainment: '#A855F7', // Violet\n      miscellaneous: '#64748B', // Slate\n    };\n\n    // Add income node\n    nodes.push({\n      id: 'income',\n      name: 'Monthly Income',\n      value: data.monthlyNetIncome,\n      color: colors.income\n    });\n\n    // Add expense nodes and links\n    data.expenses.forEach((expense, index) => {\n      const nodeId = `expense-${index}`;\n      const categoryKey = expense.category.toLowerCase().replace(/[^a-z]/g, '');\n      \n      nodes.push({\n        id: nodeId,\n        name: expense.category,\n        value: expense.amount,\n        color: colors[categoryKey as keyof typeof colors] || colors.miscellaneous\n      });\n\n      links.push({\n        source: 'income',\n        target: nodeId,\n        value: expense.amount,\n        color: colors[categoryKey as keyof typeof colors] || colors.miscellaneous\n      });\n    });\n\n    // Add savings node and link\n    if (data.savings > 0) {\n      nodes.push({\n        id: 'savings',\n        name: 'Savings',\n        value: data.savings,\n        color: colors.savings\n      });\n\n      links.push({\n        source: 'income',\n        target: 'savings',\n        value: data.savings,\n        color: colors.savings\n      });\n    }\n\n    return { nodes, links };\n  }, [data]);\n\n  // Calculate layout dimensions - make responsive\n  const containerWidth = 900;\n  const nodeWidth = 25;\n  const nodeSpacing = 15;\n  \n  // Calculate dynamic height based on number of nodes\n  const rightNodesCount = sankeyData.nodes.filter(node => node.id !== 'income').length;\n  const minNodeHeight = 25;\n  const calculatedHeight = Math.max(400, rightNodesCount * (minNodeHeight + nodeSpacing) + 100);\n  const containerHeight = calculatedHeight;\n\n  // Calculate node positions\n  const calculateLayout = () => {\n    const leftNodes = sankeyData.nodes.filter(node => node.id === 'income');\n    const rightNodes = sankeyData.nodes.filter(node => node.id !== 'income');\n\n    // Position income node on the left\n    leftNodes.forEach((node, index) => {\n      node.x = 80;\n      node.y = containerHeight / 2 - Math.max(40, node.value / 8) / 2;\n      node.width = nodeWidth;\n      node.height = Math.max(40, node.value / 8);\n    });\n\n    // Position expense/savings nodes on the right with better spacing\n    const totalRightNodesHeight = rightNodes.reduce((sum, node) => {\n      const nodeHeight = Math.max(minNodeHeight, node.value / 12);\n      return sum + nodeHeight;\n    }, 0);\n    \n    const totalSpacing = (rightNodes.length - 1) * nodeSpacing;\n    const startY = Math.max(50, (containerHeight - totalRightNodesHeight - totalSpacing) / 2);\n    \n    let currentY = startY;\n    rightNodes.forEach((node) => {\n      node.x = containerWidth - 180;\n      node.y = currentY;\n      node.width = nodeWidth;\n      node.height = Math.max(minNodeHeight, node.value / 12);\n      currentY += node.height + nodeSpacing;\n    });\n  };\n\n  calculateLayout();\n\n  // Generate SVG path for links\n  const generateLinkPath = (link: SankeyLink): string => {\n    const sourceNode = sankeyData.nodes.find(n => n.id === link.source);\n    const targetNode = sankeyData.nodes.find(n => n.id === link.target);\n    \n    if (!sourceNode || !targetNode) return '';\n\n    const sourceX = (sourceNode.x || 0) + (sourceNode.width || 0);\n    const sourceY = (sourceNode.y || 0) + (sourceNode.height || 0) / 2;\n    const targetX = targetNode.x || 0;\n    const targetY = (targetNode.y || 0) + (targetNode.height || 0) / 2;\n\n    const controlPoint1X = sourceX + (targetX - sourceX) * 0.3;\n    const controlPoint2X = sourceX + (targetX - sourceX) * 0.7;\n\n    return `M ${sourceX} ${sourceY} C ${controlPoint1X} ${sourceY}, ${controlPoint2X} ${targetY}, ${targetX} ${targetY}`;\n  };\n\n  return (\n    <div className=\"bg-white rounded-lg shadow-sm border border-gray-200 p-6 relative\">\n      <div className=\"mb-6\">\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">\n          Money Flow Visualization\n        </h3>\n        <p className=\"text-sm text-gray-600\">\n          See how your monthly income flows into expenses and savings\n        </p>\n      </div>\n\n      <div className=\"overflow-auto relative\" style={{ maxHeight: '80vh' }}>\n        <svg\n          width={containerWidth}\n          height={containerHeight}\n          className=\"mx-auto\"\n          style={{ minWidth: containerWidth, minHeight: containerHeight }}\n        >\n          {/* Render links */}\n          {sankeyData.links.map((link, index) => (\n            <path\n              key={index}\n              d={generateLinkPath(link)}\n              stroke={link.color}\n              strokeWidth={Math.max(3, link.value / 80)}\n              fill=\"none\"\n              opacity={hoveredLink === index ? 1 : 0.7}\n              className=\"transition-all duration-200 cursor-pointer\"\n              onMouseEnter={() => setHoveredLink(index)}\n              onMouseLeave={() => setHoveredLink(null)}\n            />\n          ))}\n\n          {/* Render nodes */}\n          {sankeyData.nodes.map((node) => (\n            <g key={node.id}>\n              <rect\n                x={node.x}\n                y={node.y}\n                width={node.width}\n                height={node.height}\n                fill={node.color}\n                rx={6}\n                className=\"transition-all duration-200 cursor-pointer shadow-sm\"\n                style={{\n                  opacity: hoveredNode === node.id ? 0.9 : 1,\n                  transform: hoveredNode === node.id ? 'scale(1.05)' : 'scale(1)',\n                  filter: hoveredNode === node.id ? 'drop-shadow(0 4px 8px rgba(0,0,0,0.2))' : 'none'\n                }}\n                onMouseEnter={() => setHoveredNode(node.id)}\n                onMouseLeave={() => setHoveredNode(null)}\n              />\n              \n              {/* Node labels */}\n              <text\n                x={node.id === 'income' ? (node.x || 0) - 10 : (node.x || 0) + (node.width || 0) + 10}\n                y={(node.y || 0) + (node.height || 0) / 2}\n                textAnchor={node.id === 'income' ? 'end' : 'start'}\n                dominantBaseline=\"middle\"\n                className=\"text-xs font-medium fill-gray-700\"\n              >\n                {node.name}\n              </text>\n              \n              {/* Value labels */}\n              <text\n                x={node.id === 'income' ? (node.x || 0) - 10 : (node.x || 0) + (node.width || 0) + 10}\n                y={(node.y || 0) + (node.height || 0) / 2 + 15}\n                textAnchor={node.id === 'income' ? 'end' : 'start'}\n                dominantBaseline=\"middle\"\n                className=\"text-xs fill-gray-500\"\n              >\n                {formatCurrency(node.value)}\n              </text>\n            </g>\n          ))}\n        </svg>\n      </div>\n\n      {/* Tooltip */}\n      {hoveredNode && (\n        <div className=\"absolute bg-gray-900 text-white px-3 py-2 rounded-lg shadow-lg text-sm z-10 pointer-events-none\">\n          {(() => {\n            const node = sankeyData.nodes.find(n => n.id === hoveredNode);\n            if (!node) return null;\n            return (\n              <div>\n                <div className=\"font-semibold\">{node.name}</div>\n                <div className=\"text-gray-300\">{formatCurrency(node.value)}</div>\n                {node.id === 'income' && (\n                  <div className=\"text-xs text-gray-400 mt-1\">\n                    {data.savingsPercentage.toFixed(1)}% saved\n                  </div>\n                )}\n              </div>\n            );\n          })()}\n        </div>\n      )}\n\n      {/* Legend */}\n      <div className=\"mt-6 grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-3\">\n        {sankeyData.nodes.map((node) => (\n          <div key={node.id} className=\"flex items-center space-x-2\">\n            <div\n              className=\"w-3 h-3 rounded\"\n              style={{ backgroundColor: node.color }}\n            />\n            <span className=\"text-xs text-gray-600\">\n              {node.name}: {formatCurrency(node.value)}\n            </span>\n          </div>\n        ))}\n      </div>\n\n      {/* Summary Stats */}\n      <div className=\"mt-6 grid grid-cols-1 md:grid-cols-3 gap-4 p-4 bg-gray-50 rounded-lg\">\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-green-600\">\n            {formatCurrency(data.monthlyNetIncome)}\n          </div>\n          <div className=\"text-sm text-gray-600\">Total Income</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-red-600\">\n            {formatCurrency(data.totalExpenses)}\n          </div>\n          <div className=\"text-sm text-gray-600\">Total Expenses</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"text-2xl font-bold text-blue-600\">\n            {formatCurrency(data.savings)}\n          </div>\n          <div className=\"text-sm text-gray-600\">Savings ({data.savingsPercentage.toFixed(1)}%)</div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SankeyChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}